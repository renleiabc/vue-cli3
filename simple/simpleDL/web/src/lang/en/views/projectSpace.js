/*
 * @Author:任雷雷
 * @Date: 2018-07-12 10:04:31
 * @LastEditors: 任雷雷
 * @LastEditTime: 2018-07-12 10:31:59
 * @Description:项目空间的英文包
 */
export default {
  projectContent: {
    myProject: 'my project',
    partPorject: 'participating projects',
    projectName: 'project name',
    inputKeyword: 'please input keyword query.',
    createdTime: 'create time',
    startDate: 'start date',
    endDate: 'end date',
    enterContent: 'please enter the content',
    projectStatus: 'project status',
    reset: 'reset',
    query: 'query',
    selectDate: 'selection date',
    createdProject: 'new project',
    archivedItems: 'archived items',
    deleteProject: 'delete item',
    projectList: 'project list',
    requestError: 'request error !',
    serial: 'S/N',
    file: 'file',
    setting: 'Project setting',
    delete: 'delete',
    operation: 'operation',
    documentation: 'project documentation',
    description: 'project description',
    projectStorage: 'project storage space ID',
    projectStorageKey: 'project storage space KEY',
    projectQuota: 'project quota',
    alreadyUsed: 'quota already used',
    memory: 'memory',
    unit: 'number',
    management: 'member management',
    append: 'append',
    user: 'user name',
    addTime: 'add time',
    select: 'select users',
    members: 'add project members',
    newProject: 'New project',
    subordinate: 'subordinate users'
  },
  development: {
    developmentName: 'developing environment name',
    developingInformation: 'developing environmental information',
    status: 'status',
    mirror: 'mirror name',
    createdDev: 'created development',
    developmentNameID: 'developing environment name/ID',
    card: 'GUP crad',
    remarks: 'remarks',
    details: 'details',
    mirrorImage: 'mirror image',
    development: 'development environment',
    classification: 'mirror classification',
    environmentalName: 'environmental name',
    selectMirror: 'select the mirror',
    pleaseImage: 'please select mirror image',
    youCan: 'You can only input 2-30 characters, letters and underlines',
    password: 'Only 6-16 letters, numbers or special character combinations can be entered',
    pleaseContents: 'please input contents',
    pleasePassword: 'please input password',
    confirmPassword: 'confirm the password',
    cipherInformation: 'cipher information',
    storeInformation: 'store and mount information',
    mountableAddresses: 'up to four mountable addresses can be added',
    mountAddress: 'add mount address',
    browse: 'browse',
    resource: 'resource information',
    pleaseChoose: 'choose',
    select: 'select',
    systemType: 'operating system type',
    mirrorDescription: 'mirror description',
    publicImage: 'public image',
    projectImage: 'project image',
    personalImage: 'personal image',
    commonStorage: 'list of common storage spaces',
    projectStorage: 'project storage space list',
    personalStorage: 'personal space storage list'
  },
  trainingTask: {
    trainingTask: 'training task',
    trainingName: 'training task name',
    engineType: 'engine type',
    createtask: 'create a training task',
    trainingNameID: 'training task name/ID',
    runningTime: 'running time',
    startFile: 'start-up file',
    taskName: 'task name',
    codeDirectory: 'code directory',
    startupFile: 'start up file',
    trainingData: 'training data set',
    trainingLog: 'training log directory',
    operatParameters: 'operating parameters',
    increaseParameters: 'increase the running parameters',
    nodeConfig: 'node config',
    run: 'run',
    cancel: 'cancel',
    taskInformation: 'training task information',
    versionInf: 'version information',
    manualParameter: 'manual parameter configuration',
    useParameter: 'use the last training parameter',
    whetherVisualization: 'visualization',
    yes: 'yes',
    no: 'no',
    psNode: 'PS node',
    workerNode: 'worker node',
    stop: 'stop'
  },
  modelPrediction: {
    modelPrediction: 'model prediction',
    modelJobName: 'model job name',
    useModel: 'use model',
    serverAddress: 'server address',
    createModel: 'creating model prediction operations',
    parameterSource: 'parameter source',
    jobParameter: 'job parameter',
    nodeRules: 'computing node rules',
    basicInf: 'basic information',
    parameterConfig: 'parameter configuration',
    jobName: 'job name',
    choice: 'choice',
    job: 'job name',
    interfaceType: 'interface type'
  }
}
